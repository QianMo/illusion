// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: game_config_02.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "game_config_02.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* SUB_STRUCT_A_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SUB_STRUCT_A_reflection_ = NULL;
const ::google::protobuf::Descriptor* SUB_STRUCT_B_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SUB_STRUCT_B_reflection_ = NULL;
const ::google::protobuf::Descriptor* GAME_CFG_STRUCT_2_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GAME_CFG_STRUCT_2_reflection_ = NULL;
const ::google::protobuf::Descriptor* GAME_CFG_STRUCT_2_NESTED_STRUCT_C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GAME_CFG_STRUCT_2_NESTED_STRUCT_C_reflection_ = NULL;
const ::google::protobuf::Descriptor* GAME_CFG_STRUCT_2_NESTED_STRUCT_D_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GAME_CFG_STRUCT_2_NESTED_STRUCT_D_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* GAME_CFG_STRUCT_2_NESTED_ENUM_descriptor_ = NULL;
const ::google::protobuf::Descriptor* LIST_OF_GAME_CFG_STRUCT_2_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LIST_OF_GAME_CFG_STRUCT_2_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* ENUM_COUNTRY_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_game_5fconfig_5f02_2eproto() {
  protobuf_AddDesc_game_5fconfig_5f02_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "game_config_02.proto");
  GOOGLE_CHECK(file != NULL);
  SUB_STRUCT_A_descriptor_ = file->message_type(0);
  static const int SUB_STRUCT_A_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SUB_STRUCT_A, sub_a_1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SUB_STRUCT_A, sub_a_2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SUB_STRUCT_A, sub_a_3_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SUB_STRUCT_A, sub_a_4_),
  };
  SUB_STRUCT_A_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SUB_STRUCT_A_descriptor_,
      SUB_STRUCT_A::default_instance_,
      SUB_STRUCT_A_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SUB_STRUCT_A, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SUB_STRUCT_A, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SUB_STRUCT_A));
  SUB_STRUCT_B_descriptor_ = file->message_type(1);
  static const int SUB_STRUCT_B_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SUB_STRUCT_B, sub_b_1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SUB_STRUCT_B, sub_b_2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SUB_STRUCT_B, sub_b_3_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SUB_STRUCT_B, sub_b_4_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SUB_STRUCT_B, sub_b_5_),
  };
  SUB_STRUCT_B_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SUB_STRUCT_B_descriptor_,
      SUB_STRUCT_B::default_instance_,
      SUB_STRUCT_B_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SUB_STRUCT_B, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SUB_STRUCT_B, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SUB_STRUCT_B));
  GAME_CFG_STRUCT_2_descriptor_ = file->message_type(2);
  static const int GAME_CFG_STRUCT_2_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GAME_CFG_STRUCT_2, s2_a_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GAME_CFG_STRUCT_2, s2_b_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GAME_CFG_STRUCT_2, s2_c_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GAME_CFG_STRUCT_2, s2_d_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GAME_CFG_STRUCT_2, s2_e_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GAME_CFG_STRUCT_2, s2_f_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GAME_CFG_STRUCT_2, s2_g_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GAME_CFG_STRUCT_2, s2_h_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GAME_CFG_STRUCT_2, s2_i_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GAME_CFG_STRUCT_2, s2_j_),
  };
  GAME_CFG_STRUCT_2_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GAME_CFG_STRUCT_2_descriptor_,
      GAME_CFG_STRUCT_2::default_instance_,
      GAME_CFG_STRUCT_2_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GAME_CFG_STRUCT_2, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GAME_CFG_STRUCT_2, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GAME_CFG_STRUCT_2));
  GAME_CFG_STRUCT_2_NESTED_STRUCT_C_descriptor_ = GAME_CFG_STRUCT_2_descriptor_->nested_type(0);
  static const int GAME_CFG_STRUCT_2_NESTED_STRUCT_C_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GAME_CFG_STRUCT_2_NESTED_STRUCT_C, nested_c_1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GAME_CFG_STRUCT_2_NESTED_STRUCT_C, nested_c_2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GAME_CFG_STRUCT_2_NESTED_STRUCT_C, nested_c_3_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GAME_CFG_STRUCT_2_NESTED_STRUCT_C, nested_c_4_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GAME_CFG_STRUCT_2_NESTED_STRUCT_C, nested_c_5_),
  };
  GAME_CFG_STRUCT_2_NESTED_STRUCT_C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GAME_CFG_STRUCT_2_NESTED_STRUCT_C_descriptor_,
      GAME_CFG_STRUCT_2_NESTED_STRUCT_C::default_instance_,
      GAME_CFG_STRUCT_2_NESTED_STRUCT_C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GAME_CFG_STRUCT_2_NESTED_STRUCT_C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GAME_CFG_STRUCT_2_NESTED_STRUCT_C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GAME_CFG_STRUCT_2_NESTED_STRUCT_C));
  GAME_CFG_STRUCT_2_NESTED_STRUCT_D_descriptor_ = GAME_CFG_STRUCT_2_descriptor_->nested_type(1);
  static const int GAME_CFG_STRUCT_2_NESTED_STRUCT_D_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GAME_CFG_STRUCT_2_NESTED_STRUCT_D, nested_d_1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GAME_CFG_STRUCT_2_NESTED_STRUCT_D, nested_d_2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GAME_CFG_STRUCT_2_NESTED_STRUCT_D, nested_d_3_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GAME_CFG_STRUCT_2_NESTED_STRUCT_D, nested_d_4_),
  };
  GAME_CFG_STRUCT_2_NESTED_STRUCT_D_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GAME_CFG_STRUCT_2_NESTED_STRUCT_D_descriptor_,
      GAME_CFG_STRUCT_2_NESTED_STRUCT_D::default_instance_,
      GAME_CFG_STRUCT_2_NESTED_STRUCT_D_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GAME_CFG_STRUCT_2_NESTED_STRUCT_D, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GAME_CFG_STRUCT_2_NESTED_STRUCT_D, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GAME_CFG_STRUCT_2_NESTED_STRUCT_D));
  GAME_CFG_STRUCT_2_NESTED_ENUM_descriptor_ = GAME_CFG_STRUCT_2_descriptor_->enum_type(0);
  LIST_OF_GAME_CFG_STRUCT_2_descriptor_ = file->message_type(3);
  static const int LIST_OF_GAME_CFG_STRUCT_2_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LIST_OF_GAME_CFG_STRUCT_2, list_data_),
  };
  LIST_OF_GAME_CFG_STRUCT_2_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      LIST_OF_GAME_CFG_STRUCT_2_descriptor_,
      LIST_OF_GAME_CFG_STRUCT_2::default_instance_,
      LIST_OF_GAME_CFG_STRUCT_2_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LIST_OF_GAME_CFG_STRUCT_2, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LIST_OF_GAME_CFG_STRUCT_2, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(LIST_OF_GAME_CFG_STRUCT_2));
  ENUM_COUNTRY_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_game_5fconfig_5f02_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SUB_STRUCT_A_descriptor_, &SUB_STRUCT_A::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SUB_STRUCT_B_descriptor_, &SUB_STRUCT_B::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GAME_CFG_STRUCT_2_descriptor_, &GAME_CFG_STRUCT_2::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GAME_CFG_STRUCT_2_NESTED_STRUCT_C_descriptor_, &GAME_CFG_STRUCT_2_NESTED_STRUCT_C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GAME_CFG_STRUCT_2_NESTED_STRUCT_D_descriptor_, &GAME_CFG_STRUCT_2_NESTED_STRUCT_D::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    LIST_OF_GAME_CFG_STRUCT_2_descriptor_, &LIST_OF_GAME_CFG_STRUCT_2::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_game_5fconfig_5f02_2eproto() {
  delete SUB_STRUCT_A::default_instance_;
  delete SUB_STRUCT_A_reflection_;
  delete SUB_STRUCT_B::default_instance_;
  delete SUB_STRUCT_B_reflection_;
  delete GAME_CFG_STRUCT_2::default_instance_;
  delete GAME_CFG_STRUCT_2_reflection_;
  delete GAME_CFG_STRUCT_2_NESTED_STRUCT_C::default_instance_;
  delete GAME_CFG_STRUCT_2_NESTED_STRUCT_C_reflection_;
  delete GAME_CFG_STRUCT_2_NESTED_STRUCT_D::default_instance_;
  delete GAME_CFG_STRUCT_2_NESTED_STRUCT_D_reflection_;
  delete LIST_OF_GAME_CFG_STRUCT_2::default_instance_;
  delete LIST_OF_GAME_CFG_STRUCT_2_reflection_;
}

void protobuf_AddDesc_game_5fconfig_5f02_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::illusion::protobuf_AddDesc_illusion_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\024game_config_02.proto\032\016illusion.proto\"\232"
    "\001\n\014SUB_STRUCT_A\022!\n\007sub_a_1\030\001 \001(\001B\020\310\363\030\001\322\363"
    "\030\010\351\205\215\347\275\256A1\022!\n\007sub_a_2\030\002 \001(\001B\020\310\363\030\001\322\363\030\010\351\205\215"
    "\347\275\256A2\022!\n\007sub_a_3\030\003 \001(\tB\020\310\363\030\001\322\363\030\010\351\205\215\347\275\256A3"
    "\022!\n\007sub_a_4\030\004 \001(\014B\020\310\363\030\001\322\363\030\010\351\205\215\347\275\256A4\"\261\001\n\014"
    "SUB_STRUCT_B\022!\n\007sub_b_1\030\001 \001(\005B\020\310\363\030\001\322\363\030\010\351"
    "\205\215\347\275\256B1\022!\n\007sub_b_2\030\002 \001(\003B\020\310\363\030\001\322\363\030\010\351\205\215\347\275\256"
    "B2\022!\n\007sub_b_3\030\003 \001(\rB\020\310\363\030\001\322\363\030\010\351\205\215\347\275\256B3\022!\n"
    "\007sub_b_4\030\004 \001(\003B\020\310\363\030\001\322\363\030\010\351\205\215\347\275\256B4\022\025\n\007sub_"
    "b_5\030\005 \001(\003B\004\310\363\030\000\"\317\007\n\021GAME_CFG_STRUCT_2\022 \n"
    "\004s2_a\030\001 \001(\005B\022\310\363\030\001\322\363\030\n\351\205\215\347\275\256S2-1\022 \n\004s2_b\030"
    "\002 \001(\005B\022\310\363\030\001\322\363\030\n\351\205\215\347\275\256S2-2\022 \n\004s2_c\030\003 \001(\rB"
    "\022\310\363\030\001\322\363\030\n\351\205\215\347\275\256S2-3\022$\n\004s2_d\030\004 \003(\004B\026\310\363\030\001\322"
    "\363\030\n\351\205\215\347\275\256S2-4\330\363\030\002\022/\n\004s2_e\030\005 \001(\0132\r.SUB_ST"
    "RUCT_AB\022\310\363\030\001\322\363\030\n\351\205\215\347\275\256S2-5\022%\n\004s2_f\030\006 \003(\013"
    "2\r.SUB_STRUCT_BB\010\310\363\030\001\330\363\030\002\0226\n\004s2_g\030\007 \001(\0132"
    "\".GAME_CFG_STRUCT_2.NESTED_STRUCT_CB\004\310\363\030"
    "\001\022:\n\004s2_h\030\010 \003(\0132\".GAME_CFG_STRUCT_2.NEST"
    "ED_STRUCT_DB\010\310\363\030\001\330\363\030\004\022@\n\004s2_i\030\t \001(\0162\036.GA"
    "ME_CFG_STRUCT_2.NESTED_ENUMB\022\310\363\030\001\322\363\030\n\351\205\215"
    "\347\275\256S2-9\0224\n\004s2_j\030\n \002(\0162\r.ENUM_COUNTRYB\027\310\363"
    "\030\001\322\363\030\013\351\205\215\347\275\256S2-10\330\363\030\001\032\357\001\n\017NESTED_STRUCT_"
    "C\022$\n\nnested_c_1\030\001 \001(\021B\020\310\363\030\001\322\363\030\010\351\205\215\347\275\256C1\022"
    "$\n\nnested_c_2\030\002 \001(\022B\020\310\363\030\001\322\363\030\010\351\205\215\347\275\256C2\022$\n"
    "\nnested_c_3\030\003 \001(\007B\020\310\363\030\001\322\363\030\010\351\205\215\347\275\256C3\022$\n\nn"
    "ested_c_4\030\004 \001(\006B\020\310\363\030\001\322\363\030\010\351\205\215\347\275\256C4\022D\n\nnes"
    "ted_c_5\030\005 \001(\0162\036.GAME_CFG_STRUCT_2.NESTED"
    "_ENUMB\020\310\363\030\001\322\363\030\010\351\205\215\347\275\256C5\032\251\001\n\017NESTED_STRUC"
    "T_D\022$\n\nnested_d_1\030\001 \001(\017B\020\310\363\030\001\322\363\030\010\351\205\215\347\275\256D"
    "1\022$\n\nnested_d_2\030\002 \001(\020B\020\310\363\030\001\322\363\030\010\351\205\215\347\275\256D2\022"
    "$\n\nnested_d_3\030\003 \001(\tB\020\310\363\030\001\322\363\030\010\351\205\215\347\275\256D3\022$\n"
    "\nnested_d_4\030\004 \001(\014B\020\310\363\030\001\322\363\030\010\351\205\215\347\275\256D4\"L\n\013N"
    "ESTED_ENUM\022\007\n\003MON\020\001\022\007\n\003TUE\020\002\022\007\n\003WED\020\003\022\007\n"
    "\003THU\020\004\022\007\n\003FRI\020\005\022\007\n\003SAT\020\006\022\007\n\003SUN\020\007\"\231\001\n\031LI"
    "ST_OF_GAME_CFG_STRUCT_2\022%\n\tlist_data\030\001 \003"
    "(\0132\022.GAME_CFG_STRUCT_2:U\210\265\030\001\222\265\030\023game_con"
    "fig_02.xlsx\232\265\030\021GAME_CFG_STRUCT_2\272\265\030\025GAME"
    "_CFG_STRUCT_2.bin\240\265\030\001\250\265\030\002\260\265\030\003*\270\002\n\014ENUM_C"
    "OUNTRY\022\r\n\tAUSTRALIA\020=\022\t\n\005CHILE\0208\022\t\n\005EGYP"
    "T\020\024\022\014\n\007FINLAND\020\346\002\022\n\n\006FRANCE\020!\022\013\n\007GERMANY"
    "\0201\022\016\n\tHONG_KONG\020\324\006\022\014\n\007ICELAND\020\342\002\022\t\n\005INDI"
    "A\020[\022\t\n\004IRAN\020\325\007\022\t\n\004IRAQ\020\304\007\022\014\n\007IRELAND\020\341\002\022"
    "\t\n\005ITALY\020\'\022\t\n\005JAPAN\020Q\022\014\n\010MALAYSIA\020<\022\n\n\006N"
    "ORWAY\020/\022\013\n\007PRCHINA\020V\022\n\n\006POLAND\0200\022\n\n\006RUSS"
    "IA\020\007\022\017\n\013SOUTH_KOREA\020R\022\t\n\005SPAIN\020\"\022\013\n\006TAIW"
    "AN\020\366\006\022\021\n\rUNITED_STATES\020\001", 1824);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "game_config_02.proto", &protobuf_RegisterTypes);
  SUB_STRUCT_A::default_instance_ = new SUB_STRUCT_A();
  SUB_STRUCT_B::default_instance_ = new SUB_STRUCT_B();
  GAME_CFG_STRUCT_2::default_instance_ = new GAME_CFG_STRUCT_2();
  GAME_CFG_STRUCT_2_NESTED_STRUCT_C::default_instance_ = new GAME_CFG_STRUCT_2_NESTED_STRUCT_C();
  GAME_CFG_STRUCT_2_NESTED_STRUCT_D::default_instance_ = new GAME_CFG_STRUCT_2_NESTED_STRUCT_D();
  LIST_OF_GAME_CFG_STRUCT_2::default_instance_ = new LIST_OF_GAME_CFG_STRUCT_2();
  SUB_STRUCT_A::default_instance_->InitAsDefaultInstance();
  SUB_STRUCT_B::default_instance_->InitAsDefaultInstance();
  GAME_CFG_STRUCT_2::default_instance_->InitAsDefaultInstance();
  GAME_CFG_STRUCT_2_NESTED_STRUCT_C::default_instance_->InitAsDefaultInstance();
  GAME_CFG_STRUCT_2_NESTED_STRUCT_D::default_instance_->InitAsDefaultInstance();
  LIST_OF_GAME_CFG_STRUCT_2::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_game_5fconfig_5f02_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_game_5fconfig_5f02_2eproto {
  StaticDescriptorInitializer_game_5fconfig_5f02_2eproto() {
    protobuf_AddDesc_game_5fconfig_5f02_2eproto();
  }
} static_descriptor_initializer_game_5fconfig_5f02_2eproto_;
const ::google::protobuf::EnumDescriptor* ENUM_COUNTRY_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ENUM_COUNTRY_descriptor_;
}
bool ENUM_COUNTRY_IsValid(int value) {
  switch(value) {
    case 1:
    case 7:
    case 20:
    case 33:
    case 34:
    case 39:
    case 47:
    case 48:
    case 49:
    case 56:
    case 60:
    case 61:
    case 81:
    case 82:
    case 86:
    case 91:
    case 353:
    case 354:
    case 358:
    case 852:
    case 886:
    case 964:
    case 981:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#ifndef _MSC_VER
const int SUB_STRUCT_A::kSubA1FieldNumber;
const int SUB_STRUCT_A::kSubA2FieldNumber;
const int SUB_STRUCT_A::kSubA3FieldNumber;
const int SUB_STRUCT_A::kSubA4FieldNumber;
#endif  // !_MSC_VER

SUB_STRUCT_A::SUB_STRUCT_A()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SUB_STRUCT_A)
}

void SUB_STRUCT_A::InitAsDefaultInstance() {
}

SUB_STRUCT_A::SUB_STRUCT_A(const SUB_STRUCT_A& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SUB_STRUCT_A)
}

void SUB_STRUCT_A::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  sub_a_1_ = 0;
  sub_a_2_ = 0;
  sub_a_3_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sub_a_4_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SUB_STRUCT_A::~SUB_STRUCT_A() {
  // @@protoc_insertion_point(destructor:SUB_STRUCT_A)
  SharedDtor();
}

void SUB_STRUCT_A::SharedDtor() {
  if (sub_a_3_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sub_a_3_;
  }
  if (sub_a_4_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sub_a_4_;
  }
  if (this != default_instance_) {
  }
}

void SUB_STRUCT_A::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SUB_STRUCT_A::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SUB_STRUCT_A_descriptor_;
}

const SUB_STRUCT_A& SUB_STRUCT_A::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_game_5fconfig_5f02_2eproto();
  return *default_instance_;
}

SUB_STRUCT_A* SUB_STRUCT_A::default_instance_ = NULL;

SUB_STRUCT_A* SUB_STRUCT_A::New() const {
  return new SUB_STRUCT_A;
}

void SUB_STRUCT_A::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<SUB_STRUCT_A*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 15) {
    ZR_(sub_a_1_, sub_a_2_);
    if (has_sub_a_3()) {
      if (sub_a_3_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        sub_a_3_->clear();
      }
    }
    if (has_sub_a_4()) {
      if (sub_a_4_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        sub_a_4_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SUB_STRUCT_A::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SUB_STRUCT_A)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional double sub_a_1 = 1;
      case 1: {
        if (tag == 9) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &sub_a_1_)));
          set_has_sub_a_1();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_sub_a_2;
        break;
      }

      // optional double sub_a_2 = 2;
      case 2: {
        if (tag == 17) {
         parse_sub_a_2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &sub_a_2_)));
          set_has_sub_a_2();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_sub_a_3;
        break;
      }

      // optional string sub_a_3 = 3;
      case 3: {
        if (tag == 26) {
         parse_sub_a_3:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sub_a_3()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sub_a_3().data(), this->sub_a_3().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sub_a_3");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_sub_a_4;
        break;
      }

      // optional bytes sub_a_4 = 4;
      case 4: {
        if (tag == 34) {
         parse_sub_a_4:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_sub_a_4()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SUB_STRUCT_A)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SUB_STRUCT_A)
  return false;
#undef DO_
}

void SUB_STRUCT_A::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SUB_STRUCT_A)
  // optional double sub_a_1 = 1;
  if (has_sub_a_1()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->sub_a_1(), output);
  }

  // optional double sub_a_2 = 2;
  if (has_sub_a_2()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->sub_a_2(), output);
  }

  // optional string sub_a_3 = 3;
  if (has_sub_a_3()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sub_a_3().data(), this->sub_a_3().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sub_a_3");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->sub_a_3(), output);
  }

  // optional bytes sub_a_4 = 4;
  if (has_sub_a_4()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->sub_a_4(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SUB_STRUCT_A)
}

::google::protobuf::uint8* SUB_STRUCT_A::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SUB_STRUCT_A)
  // optional double sub_a_1 = 1;
  if (has_sub_a_1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->sub_a_1(), target);
  }

  // optional double sub_a_2 = 2;
  if (has_sub_a_2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->sub_a_2(), target);
  }

  // optional string sub_a_3 = 3;
  if (has_sub_a_3()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sub_a_3().data(), this->sub_a_3().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sub_a_3");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->sub_a_3(), target);
  }

  // optional bytes sub_a_4 = 4;
  if (has_sub_a_4()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->sub_a_4(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SUB_STRUCT_A)
  return target;
}

int SUB_STRUCT_A::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional double sub_a_1 = 1;
    if (has_sub_a_1()) {
      total_size += 1 + 8;
    }

    // optional double sub_a_2 = 2;
    if (has_sub_a_2()) {
      total_size += 1 + 8;
    }

    // optional string sub_a_3 = 3;
    if (has_sub_a_3()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sub_a_3());
    }

    // optional bytes sub_a_4 = 4;
    if (has_sub_a_4()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->sub_a_4());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SUB_STRUCT_A::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SUB_STRUCT_A* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SUB_STRUCT_A*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SUB_STRUCT_A::MergeFrom(const SUB_STRUCT_A& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_sub_a_1()) {
      set_sub_a_1(from.sub_a_1());
    }
    if (from.has_sub_a_2()) {
      set_sub_a_2(from.sub_a_2());
    }
    if (from.has_sub_a_3()) {
      set_sub_a_3(from.sub_a_3());
    }
    if (from.has_sub_a_4()) {
      set_sub_a_4(from.sub_a_4());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SUB_STRUCT_A::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SUB_STRUCT_A::CopyFrom(const SUB_STRUCT_A& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SUB_STRUCT_A::IsInitialized() const {

  return true;
}

void SUB_STRUCT_A::Swap(SUB_STRUCT_A* other) {
  if (other != this) {
    std::swap(sub_a_1_, other->sub_a_1_);
    std::swap(sub_a_2_, other->sub_a_2_);
    std::swap(sub_a_3_, other->sub_a_3_);
    std::swap(sub_a_4_, other->sub_a_4_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SUB_STRUCT_A::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SUB_STRUCT_A_descriptor_;
  metadata.reflection = SUB_STRUCT_A_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SUB_STRUCT_B::kSubB1FieldNumber;
const int SUB_STRUCT_B::kSubB2FieldNumber;
const int SUB_STRUCT_B::kSubB3FieldNumber;
const int SUB_STRUCT_B::kSubB4FieldNumber;
const int SUB_STRUCT_B::kSubB5FieldNumber;
#endif  // !_MSC_VER

SUB_STRUCT_B::SUB_STRUCT_B()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SUB_STRUCT_B)
}

void SUB_STRUCT_B::InitAsDefaultInstance() {
}

SUB_STRUCT_B::SUB_STRUCT_B(const SUB_STRUCT_B& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SUB_STRUCT_B)
}

void SUB_STRUCT_B::SharedCtor() {
  _cached_size_ = 0;
  sub_b_1_ = 0;
  sub_b_2_ = GOOGLE_LONGLONG(0);
  sub_b_3_ = 0u;
  sub_b_4_ = GOOGLE_LONGLONG(0);
  sub_b_5_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SUB_STRUCT_B::~SUB_STRUCT_B() {
  // @@protoc_insertion_point(destructor:SUB_STRUCT_B)
  SharedDtor();
}

void SUB_STRUCT_B::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SUB_STRUCT_B::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SUB_STRUCT_B::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SUB_STRUCT_B_descriptor_;
}

const SUB_STRUCT_B& SUB_STRUCT_B::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_game_5fconfig_5f02_2eproto();
  return *default_instance_;
}

SUB_STRUCT_B* SUB_STRUCT_B::default_instance_ = NULL;

SUB_STRUCT_B* SUB_STRUCT_B::New() const {
  return new SUB_STRUCT_B;
}

void SUB_STRUCT_B::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<SUB_STRUCT_B*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 31) {
    ZR_(sub_b_2_, sub_b_5_);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SUB_STRUCT_B::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SUB_STRUCT_B)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 sub_b_1 = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sub_b_1_)));
          set_has_sub_b_1();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_sub_b_2;
        break;
      }

      // optional int64 sub_b_2 = 2;
      case 2: {
        if (tag == 16) {
         parse_sub_b_2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &sub_b_2_)));
          set_has_sub_b_2();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_sub_b_3;
        break;
      }

      // optional uint32 sub_b_3 = 3;
      case 3: {
        if (tag == 24) {
         parse_sub_b_3:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sub_b_3_)));
          set_has_sub_b_3();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_sub_b_4;
        break;
      }

      // optional int64 sub_b_4 = 4;
      case 4: {
        if (tag == 32) {
         parse_sub_b_4:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &sub_b_4_)));
          set_has_sub_b_4();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_sub_b_5;
        break;
      }

      // optional int64 sub_b_5 = 5;
      case 5: {
        if (tag == 40) {
         parse_sub_b_5:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &sub_b_5_)));
          set_has_sub_b_5();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SUB_STRUCT_B)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SUB_STRUCT_B)
  return false;
#undef DO_
}

void SUB_STRUCT_B::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SUB_STRUCT_B)
  // optional int32 sub_b_1 = 1;
  if (has_sub_b_1()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->sub_b_1(), output);
  }

  // optional int64 sub_b_2 = 2;
  if (has_sub_b_2()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->sub_b_2(), output);
  }

  // optional uint32 sub_b_3 = 3;
  if (has_sub_b_3()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->sub_b_3(), output);
  }

  // optional int64 sub_b_4 = 4;
  if (has_sub_b_4()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->sub_b_4(), output);
  }

  // optional int64 sub_b_5 = 5;
  if (has_sub_b_5()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->sub_b_5(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SUB_STRUCT_B)
}

::google::protobuf::uint8* SUB_STRUCT_B::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SUB_STRUCT_B)
  // optional int32 sub_b_1 = 1;
  if (has_sub_b_1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->sub_b_1(), target);
  }

  // optional int64 sub_b_2 = 2;
  if (has_sub_b_2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->sub_b_2(), target);
  }

  // optional uint32 sub_b_3 = 3;
  if (has_sub_b_3()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->sub_b_3(), target);
  }

  // optional int64 sub_b_4 = 4;
  if (has_sub_b_4()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->sub_b_4(), target);
  }

  // optional int64 sub_b_5 = 5;
  if (has_sub_b_5()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->sub_b_5(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SUB_STRUCT_B)
  return target;
}

int SUB_STRUCT_B::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 sub_b_1 = 1;
    if (has_sub_b_1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sub_b_1());
    }

    // optional int64 sub_b_2 = 2;
    if (has_sub_b_2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->sub_b_2());
    }

    // optional uint32 sub_b_3 = 3;
    if (has_sub_b_3()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->sub_b_3());
    }

    // optional int64 sub_b_4 = 4;
    if (has_sub_b_4()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->sub_b_4());
    }

    // optional int64 sub_b_5 = 5;
    if (has_sub_b_5()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->sub_b_5());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SUB_STRUCT_B::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SUB_STRUCT_B* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SUB_STRUCT_B*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SUB_STRUCT_B::MergeFrom(const SUB_STRUCT_B& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_sub_b_1()) {
      set_sub_b_1(from.sub_b_1());
    }
    if (from.has_sub_b_2()) {
      set_sub_b_2(from.sub_b_2());
    }
    if (from.has_sub_b_3()) {
      set_sub_b_3(from.sub_b_3());
    }
    if (from.has_sub_b_4()) {
      set_sub_b_4(from.sub_b_4());
    }
    if (from.has_sub_b_5()) {
      set_sub_b_5(from.sub_b_5());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SUB_STRUCT_B::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SUB_STRUCT_B::CopyFrom(const SUB_STRUCT_B& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SUB_STRUCT_B::IsInitialized() const {

  return true;
}

void SUB_STRUCT_B::Swap(SUB_STRUCT_B* other) {
  if (other != this) {
    std::swap(sub_b_1_, other->sub_b_1_);
    std::swap(sub_b_2_, other->sub_b_2_);
    std::swap(sub_b_3_, other->sub_b_3_);
    std::swap(sub_b_4_, other->sub_b_4_);
    std::swap(sub_b_5_, other->sub_b_5_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SUB_STRUCT_B::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SUB_STRUCT_B_descriptor_;
  metadata.reflection = SUB_STRUCT_B_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* GAME_CFG_STRUCT_2_NESTED_ENUM_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GAME_CFG_STRUCT_2_NESTED_ENUM_descriptor_;
}
bool GAME_CFG_STRUCT_2_NESTED_ENUM_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const GAME_CFG_STRUCT_2_NESTED_ENUM GAME_CFG_STRUCT_2::MON;
const GAME_CFG_STRUCT_2_NESTED_ENUM GAME_CFG_STRUCT_2::TUE;
const GAME_CFG_STRUCT_2_NESTED_ENUM GAME_CFG_STRUCT_2::WED;
const GAME_CFG_STRUCT_2_NESTED_ENUM GAME_CFG_STRUCT_2::THU;
const GAME_CFG_STRUCT_2_NESTED_ENUM GAME_CFG_STRUCT_2::FRI;
const GAME_CFG_STRUCT_2_NESTED_ENUM GAME_CFG_STRUCT_2::SAT;
const GAME_CFG_STRUCT_2_NESTED_ENUM GAME_CFG_STRUCT_2::SUN;
const GAME_CFG_STRUCT_2_NESTED_ENUM GAME_CFG_STRUCT_2::NESTED_ENUM_MIN;
const GAME_CFG_STRUCT_2_NESTED_ENUM GAME_CFG_STRUCT_2::NESTED_ENUM_MAX;
const int GAME_CFG_STRUCT_2::NESTED_ENUM_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int GAME_CFG_STRUCT_2_NESTED_STRUCT_C::kNestedC1FieldNumber;
const int GAME_CFG_STRUCT_2_NESTED_STRUCT_C::kNestedC2FieldNumber;
const int GAME_CFG_STRUCT_2_NESTED_STRUCT_C::kNestedC3FieldNumber;
const int GAME_CFG_STRUCT_2_NESTED_STRUCT_C::kNestedC4FieldNumber;
const int GAME_CFG_STRUCT_2_NESTED_STRUCT_C::kNestedC5FieldNumber;
#endif  // !_MSC_VER

GAME_CFG_STRUCT_2_NESTED_STRUCT_C::GAME_CFG_STRUCT_2_NESTED_STRUCT_C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:GAME_CFG_STRUCT_2.NESTED_STRUCT_C)
}

void GAME_CFG_STRUCT_2_NESTED_STRUCT_C::InitAsDefaultInstance() {
}

GAME_CFG_STRUCT_2_NESTED_STRUCT_C::GAME_CFG_STRUCT_2_NESTED_STRUCT_C(const GAME_CFG_STRUCT_2_NESTED_STRUCT_C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:GAME_CFG_STRUCT_2.NESTED_STRUCT_C)
}

void GAME_CFG_STRUCT_2_NESTED_STRUCT_C::SharedCtor() {
  _cached_size_ = 0;
  nested_c_1_ = 0;
  nested_c_2_ = GOOGLE_LONGLONG(0);
  nested_c_3_ = 0u;
  nested_c_4_ = GOOGLE_ULONGLONG(0);
  nested_c_5_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GAME_CFG_STRUCT_2_NESTED_STRUCT_C::~GAME_CFG_STRUCT_2_NESTED_STRUCT_C() {
  // @@protoc_insertion_point(destructor:GAME_CFG_STRUCT_2.NESTED_STRUCT_C)
  SharedDtor();
}

void GAME_CFG_STRUCT_2_NESTED_STRUCT_C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GAME_CFG_STRUCT_2_NESTED_STRUCT_C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GAME_CFG_STRUCT_2_NESTED_STRUCT_C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GAME_CFG_STRUCT_2_NESTED_STRUCT_C_descriptor_;
}

const GAME_CFG_STRUCT_2_NESTED_STRUCT_C& GAME_CFG_STRUCT_2_NESTED_STRUCT_C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_game_5fconfig_5f02_2eproto();
  return *default_instance_;
}

GAME_CFG_STRUCT_2_NESTED_STRUCT_C* GAME_CFG_STRUCT_2_NESTED_STRUCT_C::default_instance_ = NULL;

GAME_CFG_STRUCT_2_NESTED_STRUCT_C* GAME_CFG_STRUCT_2_NESTED_STRUCT_C::New() const {
  return new GAME_CFG_STRUCT_2_NESTED_STRUCT_C;
}

void GAME_CFG_STRUCT_2_NESTED_STRUCT_C::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<GAME_CFG_STRUCT_2_NESTED_STRUCT_C*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 31) {
    ZR_(nested_c_2_, nested_c_4_);
    nested_c_5_ = 1;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GAME_CFG_STRUCT_2_NESTED_STRUCT_C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GAME_CFG_STRUCT_2.NESTED_STRUCT_C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 nested_c_1 = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &nested_c_1_)));
          set_has_nested_c_1();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_nested_c_2;
        break;
      }

      // optional sint64 nested_c_2 = 2;
      case 2: {
        if (tag == 16) {
         parse_nested_c_2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &nested_c_2_)));
          set_has_nested_c_2();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(29)) goto parse_nested_c_3;
        break;
      }

      // optional fixed32 nested_c_3 = 3;
      case 3: {
        if (tag == 29) {
         parse_nested_c_3:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &nested_c_3_)));
          set_has_nested_c_3();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(33)) goto parse_nested_c_4;
        break;
      }

      // optional fixed64 nested_c_4 = 4;
      case 4: {
        if (tag == 33) {
         parse_nested_c_4:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &nested_c_4_)));
          set_has_nested_c_4();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_nested_c_5;
        break;
      }

      // optional .GAME_CFG_STRUCT_2.NESTED_ENUM nested_c_5 = 5;
      case 5: {
        if (tag == 40) {
         parse_nested_c_5:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::GAME_CFG_STRUCT_2_NESTED_ENUM_IsValid(value)) {
            set_nested_c_5(static_cast< ::GAME_CFG_STRUCT_2_NESTED_ENUM >(value));
          } else {
            mutable_unknown_fields()->AddVarint(5, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GAME_CFG_STRUCT_2.NESTED_STRUCT_C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GAME_CFG_STRUCT_2.NESTED_STRUCT_C)
  return false;
#undef DO_
}

void GAME_CFG_STRUCT_2_NESTED_STRUCT_C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GAME_CFG_STRUCT_2.NESTED_STRUCT_C)
  // optional sint32 nested_c_1 = 1;
  if (has_nested_c_1()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->nested_c_1(), output);
  }

  // optional sint64 nested_c_2 = 2;
  if (has_nested_c_2()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(2, this->nested_c_2(), output);
  }

  // optional fixed32 nested_c_3 = 3;
  if (has_nested_c_3()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(3, this->nested_c_3(), output);
  }

  // optional fixed64 nested_c_4 = 4;
  if (has_nested_c_4()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(4, this->nested_c_4(), output);
  }

  // optional .GAME_CFG_STRUCT_2.NESTED_ENUM nested_c_5 = 5;
  if (has_nested_c_5()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->nested_c_5(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GAME_CFG_STRUCT_2.NESTED_STRUCT_C)
}

::google::protobuf::uint8* GAME_CFG_STRUCT_2_NESTED_STRUCT_C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:GAME_CFG_STRUCT_2.NESTED_STRUCT_C)
  // optional sint32 nested_c_1 = 1;
  if (has_nested_c_1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->nested_c_1(), target);
  }

  // optional sint64 nested_c_2 = 2;
  if (has_nested_c_2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(2, this->nested_c_2(), target);
  }

  // optional fixed32 nested_c_3 = 3;
  if (has_nested_c_3()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(3, this->nested_c_3(), target);
  }

  // optional fixed64 nested_c_4 = 4;
  if (has_nested_c_4()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(4, this->nested_c_4(), target);
  }

  // optional .GAME_CFG_STRUCT_2.NESTED_ENUM nested_c_5 = 5;
  if (has_nested_c_5()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->nested_c_5(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GAME_CFG_STRUCT_2.NESTED_STRUCT_C)
  return target;
}

int GAME_CFG_STRUCT_2_NESTED_STRUCT_C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional sint32 nested_c_1 = 1;
    if (has_nested_c_1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->nested_c_1());
    }

    // optional sint64 nested_c_2 = 2;
    if (has_nested_c_2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt64Size(
          this->nested_c_2());
    }

    // optional fixed32 nested_c_3 = 3;
    if (has_nested_c_3()) {
      total_size += 1 + 4;
    }

    // optional fixed64 nested_c_4 = 4;
    if (has_nested_c_4()) {
      total_size += 1 + 8;
    }

    // optional .GAME_CFG_STRUCT_2.NESTED_ENUM nested_c_5 = 5;
    if (has_nested_c_5()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->nested_c_5());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GAME_CFG_STRUCT_2_NESTED_STRUCT_C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GAME_CFG_STRUCT_2_NESTED_STRUCT_C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GAME_CFG_STRUCT_2_NESTED_STRUCT_C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GAME_CFG_STRUCT_2_NESTED_STRUCT_C::MergeFrom(const GAME_CFG_STRUCT_2_NESTED_STRUCT_C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_nested_c_1()) {
      set_nested_c_1(from.nested_c_1());
    }
    if (from.has_nested_c_2()) {
      set_nested_c_2(from.nested_c_2());
    }
    if (from.has_nested_c_3()) {
      set_nested_c_3(from.nested_c_3());
    }
    if (from.has_nested_c_4()) {
      set_nested_c_4(from.nested_c_4());
    }
    if (from.has_nested_c_5()) {
      set_nested_c_5(from.nested_c_5());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GAME_CFG_STRUCT_2_NESTED_STRUCT_C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GAME_CFG_STRUCT_2_NESTED_STRUCT_C::CopyFrom(const GAME_CFG_STRUCT_2_NESTED_STRUCT_C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GAME_CFG_STRUCT_2_NESTED_STRUCT_C::IsInitialized() const {

  return true;
}

void GAME_CFG_STRUCT_2_NESTED_STRUCT_C::Swap(GAME_CFG_STRUCT_2_NESTED_STRUCT_C* other) {
  if (other != this) {
    std::swap(nested_c_1_, other->nested_c_1_);
    std::swap(nested_c_2_, other->nested_c_2_);
    std::swap(nested_c_3_, other->nested_c_3_);
    std::swap(nested_c_4_, other->nested_c_4_);
    std::swap(nested_c_5_, other->nested_c_5_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GAME_CFG_STRUCT_2_NESTED_STRUCT_C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GAME_CFG_STRUCT_2_NESTED_STRUCT_C_descriptor_;
  metadata.reflection = GAME_CFG_STRUCT_2_NESTED_STRUCT_C_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int GAME_CFG_STRUCT_2_NESTED_STRUCT_D::kNestedD1FieldNumber;
const int GAME_CFG_STRUCT_2_NESTED_STRUCT_D::kNestedD2FieldNumber;
const int GAME_CFG_STRUCT_2_NESTED_STRUCT_D::kNestedD3FieldNumber;
const int GAME_CFG_STRUCT_2_NESTED_STRUCT_D::kNestedD4FieldNumber;
#endif  // !_MSC_VER

GAME_CFG_STRUCT_2_NESTED_STRUCT_D::GAME_CFG_STRUCT_2_NESTED_STRUCT_D()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:GAME_CFG_STRUCT_2.NESTED_STRUCT_D)
}

void GAME_CFG_STRUCT_2_NESTED_STRUCT_D::InitAsDefaultInstance() {
}

GAME_CFG_STRUCT_2_NESTED_STRUCT_D::GAME_CFG_STRUCT_2_NESTED_STRUCT_D(const GAME_CFG_STRUCT_2_NESTED_STRUCT_D& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:GAME_CFG_STRUCT_2.NESTED_STRUCT_D)
}

void GAME_CFG_STRUCT_2_NESTED_STRUCT_D::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  nested_d_1_ = 0;
  nested_d_2_ = GOOGLE_LONGLONG(0);
  nested_d_3_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nested_d_4_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GAME_CFG_STRUCT_2_NESTED_STRUCT_D::~GAME_CFG_STRUCT_2_NESTED_STRUCT_D() {
  // @@protoc_insertion_point(destructor:GAME_CFG_STRUCT_2.NESTED_STRUCT_D)
  SharedDtor();
}

void GAME_CFG_STRUCT_2_NESTED_STRUCT_D::SharedDtor() {
  if (nested_d_3_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete nested_d_3_;
  }
  if (nested_d_4_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete nested_d_4_;
  }
  if (this != default_instance_) {
  }
}

void GAME_CFG_STRUCT_2_NESTED_STRUCT_D::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GAME_CFG_STRUCT_2_NESTED_STRUCT_D::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GAME_CFG_STRUCT_2_NESTED_STRUCT_D_descriptor_;
}

const GAME_CFG_STRUCT_2_NESTED_STRUCT_D& GAME_CFG_STRUCT_2_NESTED_STRUCT_D::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_game_5fconfig_5f02_2eproto();
  return *default_instance_;
}

GAME_CFG_STRUCT_2_NESTED_STRUCT_D* GAME_CFG_STRUCT_2_NESTED_STRUCT_D::default_instance_ = NULL;

GAME_CFG_STRUCT_2_NESTED_STRUCT_D* GAME_CFG_STRUCT_2_NESTED_STRUCT_D::New() const {
  return new GAME_CFG_STRUCT_2_NESTED_STRUCT_D;
}

void GAME_CFG_STRUCT_2_NESTED_STRUCT_D::Clear() {
  if (_has_bits_[0 / 32] & 15) {
    nested_d_1_ = 0;
    nested_d_2_ = GOOGLE_LONGLONG(0);
    if (has_nested_d_3()) {
      if (nested_d_3_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        nested_d_3_->clear();
      }
    }
    if (has_nested_d_4()) {
      if (nested_d_4_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        nested_d_4_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GAME_CFG_STRUCT_2_NESTED_STRUCT_D::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GAME_CFG_STRUCT_2.NESTED_STRUCT_D)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sfixed32 nested_d_1 = 1;
      case 1: {
        if (tag == 13) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 input, &nested_d_1_)));
          set_has_nested_d_1();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_nested_d_2;
        break;
      }

      // optional sfixed64 nested_d_2 = 2;
      case 2: {
        if (tag == 17) {
         parse_nested_d_2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, &nested_d_2_)));
          set_has_nested_d_2();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_nested_d_3;
        break;
      }

      // optional string nested_d_3 = 3;
      case 3: {
        if (tag == 26) {
         parse_nested_d_3:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nested_d_3()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->nested_d_3().data(), this->nested_d_3().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "nested_d_3");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_nested_d_4;
        break;
      }

      // optional bytes nested_d_4 = 4;
      case 4: {
        if (tag == 34) {
         parse_nested_d_4:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_nested_d_4()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GAME_CFG_STRUCT_2.NESTED_STRUCT_D)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GAME_CFG_STRUCT_2.NESTED_STRUCT_D)
  return false;
#undef DO_
}

void GAME_CFG_STRUCT_2_NESTED_STRUCT_D::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GAME_CFG_STRUCT_2.NESTED_STRUCT_D)
  // optional sfixed32 nested_d_1 = 1;
  if (has_nested_d_1()) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed32(1, this->nested_d_1(), output);
  }

  // optional sfixed64 nested_d_2 = 2;
  if (has_nested_d_2()) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64(2, this->nested_d_2(), output);
  }

  // optional string nested_d_3 = 3;
  if (has_nested_d_3()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nested_d_3().data(), this->nested_d_3().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "nested_d_3");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->nested_d_3(), output);
  }

  // optional bytes nested_d_4 = 4;
  if (has_nested_d_4()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->nested_d_4(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GAME_CFG_STRUCT_2.NESTED_STRUCT_D)
}

::google::protobuf::uint8* GAME_CFG_STRUCT_2_NESTED_STRUCT_D::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:GAME_CFG_STRUCT_2.NESTED_STRUCT_D)
  // optional sfixed32 nested_d_1 = 1;
  if (has_nested_d_1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed32ToArray(1, this->nested_d_1(), target);
  }

  // optional sfixed64 nested_d_2 = 2;
  if (has_nested_d_2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed64ToArray(2, this->nested_d_2(), target);
  }

  // optional string nested_d_3 = 3;
  if (has_nested_d_3()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nested_d_3().data(), this->nested_d_3().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "nested_d_3");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->nested_d_3(), target);
  }

  // optional bytes nested_d_4 = 4;
  if (has_nested_d_4()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->nested_d_4(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GAME_CFG_STRUCT_2.NESTED_STRUCT_D)
  return target;
}

int GAME_CFG_STRUCT_2_NESTED_STRUCT_D::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional sfixed32 nested_d_1 = 1;
    if (has_nested_d_1()) {
      total_size += 1 + 4;
    }

    // optional sfixed64 nested_d_2 = 2;
    if (has_nested_d_2()) {
      total_size += 1 + 8;
    }

    // optional string nested_d_3 = 3;
    if (has_nested_d_3()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->nested_d_3());
    }

    // optional bytes nested_d_4 = 4;
    if (has_nested_d_4()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->nested_d_4());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GAME_CFG_STRUCT_2_NESTED_STRUCT_D::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GAME_CFG_STRUCT_2_NESTED_STRUCT_D* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GAME_CFG_STRUCT_2_NESTED_STRUCT_D*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GAME_CFG_STRUCT_2_NESTED_STRUCT_D::MergeFrom(const GAME_CFG_STRUCT_2_NESTED_STRUCT_D& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_nested_d_1()) {
      set_nested_d_1(from.nested_d_1());
    }
    if (from.has_nested_d_2()) {
      set_nested_d_2(from.nested_d_2());
    }
    if (from.has_nested_d_3()) {
      set_nested_d_3(from.nested_d_3());
    }
    if (from.has_nested_d_4()) {
      set_nested_d_4(from.nested_d_4());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GAME_CFG_STRUCT_2_NESTED_STRUCT_D::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GAME_CFG_STRUCT_2_NESTED_STRUCT_D::CopyFrom(const GAME_CFG_STRUCT_2_NESTED_STRUCT_D& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GAME_CFG_STRUCT_2_NESTED_STRUCT_D::IsInitialized() const {

  return true;
}

void GAME_CFG_STRUCT_2_NESTED_STRUCT_D::Swap(GAME_CFG_STRUCT_2_NESTED_STRUCT_D* other) {
  if (other != this) {
    std::swap(nested_d_1_, other->nested_d_1_);
    std::swap(nested_d_2_, other->nested_d_2_);
    std::swap(nested_d_3_, other->nested_d_3_);
    std::swap(nested_d_4_, other->nested_d_4_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GAME_CFG_STRUCT_2_NESTED_STRUCT_D::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GAME_CFG_STRUCT_2_NESTED_STRUCT_D_descriptor_;
  metadata.reflection = GAME_CFG_STRUCT_2_NESTED_STRUCT_D_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int GAME_CFG_STRUCT_2::kS2AFieldNumber;
const int GAME_CFG_STRUCT_2::kS2BFieldNumber;
const int GAME_CFG_STRUCT_2::kS2CFieldNumber;
const int GAME_CFG_STRUCT_2::kS2DFieldNumber;
const int GAME_CFG_STRUCT_2::kS2EFieldNumber;
const int GAME_CFG_STRUCT_2::kS2FFieldNumber;
const int GAME_CFG_STRUCT_2::kS2GFieldNumber;
const int GAME_CFG_STRUCT_2::kS2HFieldNumber;
const int GAME_CFG_STRUCT_2::kS2IFieldNumber;
const int GAME_CFG_STRUCT_2::kS2JFieldNumber;
#endif  // !_MSC_VER

GAME_CFG_STRUCT_2::GAME_CFG_STRUCT_2()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:GAME_CFG_STRUCT_2)
}

void GAME_CFG_STRUCT_2::InitAsDefaultInstance() {
  s2_e_ = const_cast< ::SUB_STRUCT_A*>(&::SUB_STRUCT_A::default_instance());
  s2_g_ = const_cast< ::GAME_CFG_STRUCT_2_NESTED_STRUCT_C*>(&::GAME_CFG_STRUCT_2_NESTED_STRUCT_C::default_instance());
}

GAME_CFG_STRUCT_2::GAME_CFG_STRUCT_2(const GAME_CFG_STRUCT_2& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:GAME_CFG_STRUCT_2)
}

void GAME_CFG_STRUCT_2::SharedCtor() {
  _cached_size_ = 0;
  s2_a_ = 0;
  s2_b_ = 0;
  s2_c_ = 0u;
  s2_e_ = NULL;
  s2_g_ = NULL;
  s2_i_ = 1;
  s2_j_ = 61;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GAME_CFG_STRUCT_2::~GAME_CFG_STRUCT_2() {
  // @@protoc_insertion_point(destructor:GAME_CFG_STRUCT_2)
  SharedDtor();
}

void GAME_CFG_STRUCT_2::SharedDtor() {
  if (this != default_instance_) {
    delete s2_e_;
    delete s2_g_;
  }
}

void GAME_CFG_STRUCT_2::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GAME_CFG_STRUCT_2::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GAME_CFG_STRUCT_2_descriptor_;
}

const GAME_CFG_STRUCT_2& GAME_CFG_STRUCT_2::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_game_5fconfig_5f02_2eproto();
  return *default_instance_;
}

GAME_CFG_STRUCT_2* GAME_CFG_STRUCT_2::default_instance_ = NULL;

GAME_CFG_STRUCT_2* GAME_CFG_STRUCT_2::New() const {
  return new GAME_CFG_STRUCT_2;
}

void GAME_CFG_STRUCT_2::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<GAME_CFG_STRUCT_2*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 87) {
    ZR_(s2_a_, s2_b_);
    s2_c_ = 0u;
    if (has_s2_e()) {
      if (s2_e_ != NULL) s2_e_->::SUB_STRUCT_A::Clear();
    }
    if (has_s2_g()) {
      if (s2_g_ != NULL) s2_g_->::GAME_CFG_STRUCT_2_NESTED_STRUCT_C::Clear();
    }
  }
  if (_has_bits_[8 / 32] & 768) {
    s2_i_ = 1;
    s2_j_ = 61;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  s2_d_.Clear();
  s2_f_.Clear();
  s2_h_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GAME_CFG_STRUCT_2::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GAME_CFG_STRUCT_2)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 s2_a = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &s2_a_)));
          set_has_s2_a();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_s2_b;
        break;
      }

      // optional int32 s2_b = 2;
      case 2: {
        if (tag == 16) {
         parse_s2_b:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &s2_b_)));
          set_has_s2_b();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_s2_c;
        break;
      }

      // optional uint32 s2_c = 3;
      case 3: {
        if (tag == 24) {
         parse_s2_c:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &s2_c_)));
          set_has_s2_c();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_s2_d;
        break;
      }

      // repeated uint64 s2_d = 4;
      case 4: {
        if (tag == 32) {
         parse_s2_d:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 32, input, this->mutable_s2_d())));
        } else if (tag == 34) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_s2_d())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_s2_d;
        if (input->ExpectTag(42)) goto parse_s2_e;
        break;
      }

      // optional .SUB_STRUCT_A s2_e = 5;
      case 5: {
        if (tag == 42) {
         parse_s2_e:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_s2_e()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_s2_f;
        break;
      }

      // repeated .SUB_STRUCT_B s2_f = 6;
      case 6: {
        if (tag == 50) {
         parse_s2_f:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_s2_f()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_s2_f;
        if (input->ExpectTag(58)) goto parse_s2_g;
        break;
      }

      // optional .GAME_CFG_STRUCT_2.NESTED_STRUCT_C s2_g = 7;
      case 7: {
        if (tag == 58) {
         parse_s2_g:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_s2_g()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_s2_h;
        break;
      }

      // repeated .GAME_CFG_STRUCT_2.NESTED_STRUCT_D s2_h = 8;
      case 8: {
        if (tag == 66) {
         parse_s2_h:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_s2_h()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_s2_h;
        if (input->ExpectTag(72)) goto parse_s2_i;
        break;
      }

      // optional .GAME_CFG_STRUCT_2.NESTED_ENUM s2_i = 9;
      case 9: {
        if (tag == 72) {
         parse_s2_i:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::GAME_CFG_STRUCT_2_NESTED_ENUM_IsValid(value)) {
            set_s2_i(static_cast< ::GAME_CFG_STRUCT_2_NESTED_ENUM >(value));
          } else {
            mutable_unknown_fields()->AddVarint(9, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_s2_j;
        break;
      }

      // required .ENUM_COUNTRY s2_j = 10;
      case 10: {
        if (tag == 80) {
         parse_s2_j:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::ENUM_COUNTRY_IsValid(value)) {
            set_s2_j(static_cast< ::ENUM_COUNTRY >(value));
          } else {
            mutable_unknown_fields()->AddVarint(10, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GAME_CFG_STRUCT_2)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GAME_CFG_STRUCT_2)
  return false;
#undef DO_
}

void GAME_CFG_STRUCT_2::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GAME_CFG_STRUCT_2)
  // optional int32 s2_a = 1;
  if (has_s2_a()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->s2_a(), output);
  }

  // optional int32 s2_b = 2;
  if (has_s2_b()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->s2_b(), output);
  }

  // optional uint32 s2_c = 3;
  if (has_s2_c()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->s2_c(), output);
  }

  // repeated uint64 s2_d = 4;
  for (int i = 0; i < this->s2_d_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      4, this->s2_d(i), output);
  }

  // optional .SUB_STRUCT_A s2_e = 5;
  if (has_s2_e()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->s2_e(), output);
  }

  // repeated .SUB_STRUCT_B s2_f = 6;
  for (int i = 0; i < this->s2_f_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->s2_f(i), output);
  }

  // optional .GAME_CFG_STRUCT_2.NESTED_STRUCT_C s2_g = 7;
  if (has_s2_g()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->s2_g(), output);
  }

  // repeated .GAME_CFG_STRUCT_2.NESTED_STRUCT_D s2_h = 8;
  for (int i = 0; i < this->s2_h_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->s2_h(i), output);
  }

  // optional .GAME_CFG_STRUCT_2.NESTED_ENUM s2_i = 9;
  if (has_s2_i()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      9, this->s2_i(), output);
  }

  // required .ENUM_COUNTRY s2_j = 10;
  if (has_s2_j()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      10, this->s2_j(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GAME_CFG_STRUCT_2)
}

::google::protobuf::uint8* GAME_CFG_STRUCT_2::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:GAME_CFG_STRUCT_2)
  // optional int32 s2_a = 1;
  if (has_s2_a()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->s2_a(), target);
  }

  // optional int32 s2_b = 2;
  if (has_s2_b()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->s2_b(), target);
  }

  // optional uint32 s2_c = 3;
  if (has_s2_c()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->s2_c(), target);
  }

  // repeated uint64 s2_d = 4;
  for (int i = 0; i < this->s2_d_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64ToArray(4, this->s2_d(i), target);
  }

  // optional .SUB_STRUCT_A s2_e = 5;
  if (has_s2_e()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->s2_e(), target);
  }

  // repeated .SUB_STRUCT_B s2_f = 6;
  for (int i = 0; i < this->s2_f_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->s2_f(i), target);
  }

  // optional .GAME_CFG_STRUCT_2.NESTED_STRUCT_C s2_g = 7;
  if (has_s2_g()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->s2_g(), target);
  }

  // repeated .GAME_CFG_STRUCT_2.NESTED_STRUCT_D s2_h = 8;
  for (int i = 0; i < this->s2_h_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, this->s2_h(i), target);
  }

  // optional .GAME_CFG_STRUCT_2.NESTED_ENUM s2_i = 9;
  if (has_s2_i()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      9, this->s2_i(), target);
  }

  // required .ENUM_COUNTRY s2_j = 10;
  if (has_s2_j()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      10, this->s2_j(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GAME_CFG_STRUCT_2)
  return target;
}

int GAME_CFG_STRUCT_2::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 s2_a = 1;
    if (has_s2_a()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->s2_a());
    }

    // optional int32 s2_b = 2;
    if (has_s2_b()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->s2_b());
    }

    // optional uint32 s2_c = 3;
    if (has_s2_c()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->s2_c());
    }

    // optional .SUB_STRUCT_A s2_e = 5;
    if (has_s2_e()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->s2_e());
    }

    // optional .GAME_CFG_STRUCT_2.NESTED_STRUCT_C s2_g = 7;
    if (has_s2_g()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->s2_g());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional .GAME_CFG_STRUCT_2.NESTED_ENUM s2_i = 9;
    if (has_s2_i()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->s2_i());
    }

    // required .ENUM_COUNTRY s2_j = 10;
    if (has_s2_j()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->s2_j());
    }

  }
  // repeated uint64 s2_d = 4;
  {
    int data_size = 0;
    for (int i = 0; i < this->s2_d_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt64Size(this->s2_d(i));
    }
    total_size += 1 * this->s2_d_size() + data_size;
  }

  // repeated .SUB_STRUCT_B s2_f = 6;
  total_size += 1 * this->s2_f_size();
  for (int i = 0; i < this->s2_f_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->s2_f(i));
  }

  // repeated .GAME_CFG_STRUCT_2.NESTED_STRUCT_D s2_h = 8;
  total_size += 1 * this->s2_h_size();
  for (int i = 0; i < this->s2_h_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->s2_h(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GAME_CFG_STRUCT_2::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GAME_CFG_STRUCT_2* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GAME_CFG_STRUCT_2*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GAME_CFG_STRUCT_2::MergeFrom(const GAME_CFG_STRUCT_2& from) {
  GOOGLE_CHECK_NE(&from, this);
  s2_d_.MergeFrom(from.s2_d_);
  s2_f_.MergeFrom(from.s2_f_);
  s2_h_.MergeFrom(from.s2_h_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_s2_a()) {
      set_s2_a(from.s2_a());
    }
    if (from.has_s2_b()) {
      set_s2_b(from.s2_b());
    }
    if (from.has_s2_c()) {
      set_s2_c(from.s2_c());
    }
    if (from.has_s2_e()) {
      mutable_s2_e()->::SUB_STRUCT_A::MergeFrom(from.s2_e());
    }
    if (from.has_s2_g()) {
      mutable_s2_g()->::GAME_CFG_STRUCT_2_NESTED_STRUCT_C::MergeFrom(from.s2_g());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_s2_i()) {
      set_s2_i(from.s2_i());
    }
    if (from.has_s2_j()) {
      set_s2_j(from.s2_j());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GAME_CFG_STRUCT_2::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GAME_CFG_STRUCT_2::CopyFrom(const GAME_CFG_STRUCT_2& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GAME_CFG_STRUCT_2::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000200) != 0x00000200) return false;

  return true;
}

void GAME_CFG_STRUCT_2::Swap(GAME_CFG_STRUCT_2* other) {
  if (other != this) {
    std::swap(s2_a_, other->s2_a_);
    std::swap(s2_b_, other->s2_b_);
    std::swap(s2_c_, other->s2_c_);
    s2_d_.Swap(&other->s2_d_);
    std::swap(s2_e_, other->s2_e_);
    s2_f_.Swap(&other->s2_f_);
    std::swap(s2_g_, other->s2_g_);
    s2_h_.Swap(&other->s2_h_);
    std::swap(s2_i_, other->s2_i_);
    std::swap(s2_j_, other->s2_j_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GAME_CFG_STRUCT_2::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GAME_CFG_STRUCT_2_descriptor_;
  metadata.reflection = GAME_CFG_STRUCT_2_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int LIST_OF_GAME_CFG_STRUCT_2::kListDataFieldNumber;
#endif  // !_MSC_VER

LIST_OF_GAME_CFG_STRUCT_2::LIST_OF_GAME_CFG_STRUCT_2()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:LIST_OF_GAME_CFG_STRUCT_2)
}

void LIST_OF_GAME_CFG_STRUCT_2::InitAsDefaultInstance() {
}

LIST_OF_GAME_CFG_STRUCT_2::LIST_OF_GAME_CFG_STRUCT_2(const LIST_OF_GAME_CFG_STRUCT_2& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:LIST_OF_GAME_CFG_STRUCT_2)
}

void LIST_OF_GAME_CFG_STRUCT_2::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LIST_OF_GAME_CFG_STRUCT_2::~LIST_OF_GAME_CFG_STRUCT_2() {
  // @@protoc_insertion_point(destructor:LIST_OF_GAME_CFG_STRUCT_2)
  SharedDtor();
}

void LIST_OF_GAME_CFG_STRUCT_2::SharedDtor() {
  if (this != default_instance_) {
  }
}

void LIST_OF_GAME_CFG_STRUCT_2::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LIST_OF_GAME_CFG_STRUCT_2::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LIST_OF_GAME_CFG_STRUCT_2_descriptor_;
}

const LIST_OF_GAME_CFG_STRUCT_2& LIST_OF_GAME_CFG_STRUCT_2::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_game_5fconfig_5f02_2eproto();
  return *default_instance_;
}

LIST_OF_GAME_CFG_STRUCT_2* LIST_OF_GAME_CFG_STRUCT_2::default_instance_ = NULL;

LIST_OF_GAME_CFG_STRUCT_2* LIST_OF_GAME_CFG_STRUCT_2::New() const {
  return new LIST_OF_GAME_CFG_STRUCT_2;
}

void LIST_OF_GAME_CFG_STRUCT_2::Clear() {
  list_data_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool LIST_OF_GAME_CFG_STRUCT_2::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LIST_OF_GAME_CFG_STRUCT_2)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .GAME_CFG_STRUCT_2 list_data = 1;
      case 1: {
        if (tag == 10) {
         parse_list_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_list_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_list_data;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LIST_OF_GAME_CFG_STRUCT_2)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LIST_OF_GAME_CFG_STRUCT_2)
  return false;
#undef DO_
}

void LIST_OF_GAME_CFG_STRUCT_2::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LIST_OF_GAME_CFG_STRUCT_2)
  // repeated .GAME_CFG_STRUCT_2 list_data = 1;
  for (int i = 0; i < this->list_data_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->list_data(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:LIST_OF_GAME_CFG_STRUCT_2)
}

::google::protobuf::uint8* LIST_OF_GAME_CFG_STRUCT_2::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:LIST_OF_GAME_CFG_STRUCT_2)
  // repeated .GAME_CFG_STRUCT_2 list_data = 1;
  for (int i = 0; i < this->list_data_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->list_data(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LIST_OF_GAME_CFG_STRUCT_2)
  return target;
}

int LIST_OF_GAME_CFG_STRUCT_2::ByteSize() const {
  int total_size = 0;

  // repeated .GAME_CFG_STRUCT_2 list_data = 1;
  total_size += 1 * this->list_data_size();
  for (int i = 0; i < this->list_data_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->list_data(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LIST_OF_GAME_CFG_STRUCT_2::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const LIST_OF_GAME_CFG_STRUCT_2* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const LIST_OF_GAME_CFG_STRUCT_2*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void LIST_OF_GAME_CFG_STRUCT_2::MergeFrom(const LIST_OF_GAME_CFG_STRUCT_2& from) {
  GOOGLE_CHECK_NE(&from, this);
  list_data_.MergeFrom(from.list_data_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void LIST_OF_GAME_CFG_STRUCT_2::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LIST_OF_GAME_CFG_STRUCT_2::CopyFrom(const LIST_OF_GAME_CFG_STRUCT_2& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LIST_OF_GAME_CFG_STRUCT_2::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->list_data())) return false;
  return true;
}

void LIST_OF_GAME_CFG_STRUCT_2::Swap(LIST_OF_GAME_CFG_STRUCT_2* other) {
  if (other != this) {
    list_data_.Swap(&other->list_data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata LIST_OF_GAME_CFG_STRUCT_2::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LIST_OF_GAME_CFG_STRUCT_2_descriptor_;
  metadata.reflection = LIST_OF_GAME_CFG_STRUCT_2_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)

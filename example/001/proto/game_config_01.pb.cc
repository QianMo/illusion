// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: game_config_01.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "game_config_01.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* GAME_CFG_STRUCT_1_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GAME_CFG_STRUCT_1_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* ENUM_WEEK_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_game_5fconfig_5f01_2eproto() {
  protobuf_AddDesc_game_5fconfig_5f01_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "game_config_01.proto");
  GOOGLE_CHECK(file != NULL);
  GAME_CFG_STRUCT_1_descriptor_ = file->message_type(0);
  static const int GAME_CFG_STRUCT_1_offsets_[12] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GAME_CFG_STRUCT_1, s1_a_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GAME_CFG_STRUCT_1, s1_b_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GAME_CFG_STRUCT_1, s1_c_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GAME_CFG_STRUCT_1, s1_d_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GAME_CFG_STRUCT_1, s1_e_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GAME_CFG_STRUCT_1, s1_f_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GAME_CFG_STRUCT_1, s1_g_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GAME_CFG_STRUCT_1, s1_h_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GAME_CFG_STRUCT_1, s1_i_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GAME_CFG_STRUCT_1, s1_j_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GAME_CFG_STRUCT_1, s1_k_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GAME_CFG_STRUCT_1, s1_l_),
  };
  GAME_CFG_STRUCT_1_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GAME_CFG_STRUCT_1_descriptor_,
      GAME_CFG_STRUCT_1::default_instance_,
      GAME_CFG_STRUCT_1_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GAME_CFG_STRUCT_1, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GAME_CFG_STRUCT_1, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GAME_CFG_STRUCT_1));
  ENUM_WEEK_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_game_5fconfig_5f01_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GAME_CFG_STRUCT_1_descriptor_, &GAME_CFG_STRUCT_1::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_game_5fconfig_5f01_2eproto() {
  delete GAME_CFG_STRUCT_1::default_instance_;
  delete GAME_CFG_STRUCT_1_reflection_;
}

void protobuf_AddDesc_game_5fconfig_5f01_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\024game_config_01.proto\"\307\001\n\021GAME_CFG_STRU"
    "CT_1\022\014\n\004s1_a\030\001 \001(\005\022\014\n\004s1_b\030\002 \001(\r\022\014\n\004s1_c"
    "\030\003 \001(\003\022\014\n\004s1_d\030\004 \001(\004\022\014\n\004s1_e\030\005 \001(\001\022\014\n\004s1"
    "_f\030\006 \001(\002\022\014\n\004s1_g\030\007 \001(\010\022\014\n\004s1_h\030\010 \001(\t\022\014\n\004"
    "s1_i\030\t \001(\014\022\014\n\004s1_j\030\n \003(\005\022\014\n\004s1_k\030\013 \003(\t\022\030"
    "\n\004s1_l\030\014 \001(\0162\n.ENUM_WEEK*J\n\tENUM_WEEK\022\007\n"
    "\003MON\020\001\022\007\n\003TUE\020\002\022\007\n\003WED\020\003\022\007\n\003THU\020\004\022\007\n\003FRI"
    "\020\005\022\007\n\003SAT\020\006\022\007\n\003SUN\020\007", 300);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "game_config_01.proto", &protobuf_RegisterTypes);
  GAME_CFG_STRUCT_1::default_instance_ = new GAME_CFG_STRUCT_1();
  GAME_CFG_STRUCT_1::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_game_5fconfig_5f01_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_game_5fconfig_5f01_2eproto {
  StaticDescriptorInitializer_game_5fconfig_5f01_2eproto() {
    protobuf_AddDesc_game_5fconfig_5f01_2eproto();
  }
} static_descriptor_initializer_game_5fconfig_5f01_2eproto_;
const ::google::protobuf::EnumDescriptor* ENUM_WEEK_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ENUM_WEEK_descriptor_;
}
bool ENUM_WEEK_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#ifndef _MSC_VER
const int GAME_CFG_STRUCT_1::kS1AFieldNumber;
const int GAME_CFG_STRUCT_1::kS1BFieldNumber;
const int GAME_CFG_STRUCT_1::kS1CFieldNumber;
const int GAME_CFG_STRUCT_1::kS1DFieldNumber;
const int GAME_CFG_STRUCT_1::kS1EFieldNumber;
const int GAME_CFG_STRUCT_1::kS1FFieldNumber;
const int GAME_CFG_STRUCT_1::kS1GFieldNumber;
const int GAME_CFG_STRUCT_1::kS1HFieldNumber;
const int GAME_CFG_STRUCT_1::kS1IFieldNumber;
const int GAME_CFG_STRUCT_1::kS1JFieldNumber;
const int GAME_CFG_STRUCT_1::kS1KFieldNumber;
const int GAME_CFG_STRUCT_1::kS1LFieldNumber;
#endif  // !_MSC_VER

GAME_CFG_STRUCT_1::GAME_CFG_STRUCT_1()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:GAME_CFG_STRUCT_1)
}

void GAME_CFG_STRUCT_1::InitAsDefaultInstance() {
}

GAME_CFG_STRUCT_1::GAME_CFG_STRUCT_1(const GAME_CFG_STRUCT_1& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:GAME_CFG_STRUCT_1)
}

void GAME_CFG_STRUCT_1::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  s1_a_ = 0;
  s1_b_ = 0u;
  s1_c_ = GOOGLE_LONGLONG(0);
  s1_d_ = GOOGLE_ULONGLONG(0);
  s1_e_ = 0;
  s1_f_ = 0;
  s1_g_ = false;
  s1_h_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  s1_i_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  s1_l_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GAME_CFG_STRUCT_1::~GAME_CFG_STRUCT_1() {
  // @@protoc_insertion_point(destructor:GAME_CFG_STRUCT_1)
  SharedDtor();
}

void GAME_CFG_STRUCT_1::SharedDtor() {
  if (s1_h_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete s1_h_;
  }
  if (s1_i_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete s1_i_;
  }
  if (this != default_instance_) {
  }
}

void GAME_CFG_STRUCT_1::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GAME_CFG_STRUCT_1::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GAME_CFG_STRUCT_1_descriptor_;
}

const GAME_CFG_STRUCT_1& GAME_CFG_STRUCT_1::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_game_5fconfig_5f01_2eproto();
  return *default_instance_;
}

GAME_CFG_STRUCT_1* GAME_CFG_STRUCT_1::default_instance_ = NULL;

GAME_CFG_STRUCT_1* GAME_CFG_STRUCT_1::New() const {
  return new GAME_CFG_STRUCT_1;
}

void GAME_CFG_STRUCT_1::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<GAME_CFG_STRUCT_1*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(s1_a_, s1_g_);
    if (has_s1_h()) {
      if (s1_h_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        s1_h_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & 2304) {
    if (has_s1_i()) {
      if (s1_i_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        s1_i_->clear();
      }
    }
    s1_l_ = 1;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  s1_j_.Clear();
  s1_k_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GAME_CFG_STRUCT_1::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GAME_CFG_STRUCT_1)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 s1_a = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &s1_a_)));
          set_has_s1_a();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_s1_b;
        break;
      }

      // optional uint32 s1_b = 2;
      case 2: {
        if (tag == 16) {
         parse_s1_b:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &s1_b_)));
          set_has_s1_b();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_s1_c;
        break;
      }

      // optional int64 s1_c = 3;
      case 3: {
        if (tag == 24) {
         parse_s1_c:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &s1_c_)));
          set_has_s1_c();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_s1_d;
        break;
      }

      // optional uint64 s1_d = 4;
      case 4: {
        if (tag == 32) {
         parse_s1_d:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &s1_d_)));
          set_has_s1_d();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(41)) goto parse_s1_e;
        break;
      }

      // optional double s1_e = 5;
      case 5: {
        if (tag == 41) {
         parse_s1_e:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &s1_e_)));
          set_has_s1_e();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(53)) goto parse_s1_f;
        break;
      }

      // optional float s1_f = 6;
      case 6: {
        if (tag == 53) {
         parse_s1_f:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &s1_f_)));
          set_has_s1_f();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_s1_g;
        break;
      }

      // optional bool s1_g = 7;
      case 7: {
        if (tag == 56) {
         parse_s1_g:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &s1_g_)));
          set_has_s1_g();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_s1_h;
        break;
      }

      // optional string s1_h = 8;
      case 8: {
        if (tag == 66) {
         parse_s1_h:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_s1_h()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->s1_h().data(), this->s1_h().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "s1_h");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_s1_i;
        break;
      }

      // optional bytes s1_i = 9;
      case 9: {
        if (tag == 74) {
         parse_s1_i:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_s1_i()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_s1_j;
        break;
      }

      // repeated int32 s1_j = 10;
      case 10: {
        if (tag == 80) {
         parse_s1_j:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 80, input, this->mutable_s1_j())));
        } else if (tag == 82) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_s1_j())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_s1_j;
        if (input->ExpectTag(90)) goto parse_s1_k;
        break;
      }

      // repeated string s1_k = 11;
      case 11: {
        if (tag == 90) {
         parse_s1_k:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_s1_k()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->s1_k(this->s1_k_size() - 1).data(),
            this->s1_k(this->s1_k_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "s1_k");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_s1_k;
        if (input->ExpectTag(96)) goto parse_s1_l;
        break;
      }

      // optional .ENUM_WEEK s1_l = 12;
      case 12: {
        if (tag == 96) {
         parse_s1_l:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::ENUM_WEEK_IsValid(value)) {
            set_s1_l(static_cast< ::ENUM_WEEK >(value));
          } else {
            mutable_unknown_fields()->AddVarint(12, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GAME_CFG_STRUCT_1)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GAME_CFG_STRUCT_1)
  return false;
#undef DO_
}

void GAME_CFG_STRUCT_1::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GAME_CFG_STRUCT_1)
  // optional int32 s1_a = 1;
  if (has_s1_a()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->s1_a(), output);
  }

  // optional uint32 s1_b = 2;
  if (has_s1_b()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->s1_b(), output);
  }

  // optional int64 s1_c = 3;
  if (has_s1_c()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->s1_c(), output);
  }

  // optional uint64 s1_d = 4;
  if (has_s1_d()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->s1_d(), output);
  }

  // optional double s1_e = 5;
  if (has_s1_e()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->s1_e(), output);
  }

  // optional float s1_f = 6;
  if (has_s1_f()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->s1_f(), output);
  }

  // optional bool s1_g = 7;
  if (has_s1_g()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->s1_g(), output);
  }

  // optional string s1_h = 8;
  if (has_s1_h()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->s1_h().data(), this->s1_h().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "s1_h");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->s1_h(), output);
  }

  // optional bytes s1_i = 9;
  if (has_s1_i()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      9, this->s1_i(), output);
  }

  // repeated int32 s1_j = 10;
  for (int i = 0; i < this->s1_j_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      10, this->s1_j(i), output);
  }

  // repeated string s1_k = 11;
  for (int i = 0; i < this->s1_k_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->s1_k(i).data(), this->s1_k(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "s1_k");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      11, this->s1_k(i), output);
  }

  // optional .ENUM_WEEK s1_l = 12;
  if (has_s1_l()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      12, this->s1_l(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GAME_CFG_STRUCT_1)
}

::google::protobuf::uint8* GAME_CFG_STRUCT_1::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:GAME_CFG_STRUCT_1)
  // optional int32 s1_a = 1;
  if (has_s1_a()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->s1_a(), target);
  }

  // optional uint32 s1_b = 2;
  if (has_s1_b()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->s1_b(), target);
  }

  // optional int64 s1_c = 3;
  if (has_s1_c()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->s1_c(), target);
  }

  // optional uint64 s1_d = 4;
  if (has_s1_d()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->s1_d(), target);
  }

  // optional double s1_e = 5;
  if (has_s1_e()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->s1_e(), target);
  }

  // optional float s1_f = 6;
  if (has_s1_f()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->s1_f(), target);
  }

  // optional bool s1_g = 7;
  if (has_s1_g()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->s1_g(), target);
  }

  // optional string s1_h = 8;
  if (has_s1_h()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->s1_h().data(), this->s1_h().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "s1_h");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->s1_h(), target);
  }

  // optional bytes s1_i = 9;
  if (has_s1_i()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        9, this->s1_i(), target);
  }

  // repeated int32 s1_j = 10;
  for (int i = 0; i < this->s1_j_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(10, this->s1_j(i), target);
  }

  // repeated string s1_k = 11;
  for (int i = 0; i < this->s1_k_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->s1_k(i).data(), this->s1_k(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "s1_k");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(11, this->s1_k(i), target);
  }

  // optional .ENUM_WEEK s1_l = 12;
  if (has_s1_l()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      12, this->s1_l(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GAME_CFG_STRUCT_1)
  return target;
}

int GAME_CFG_STRUCT_1::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 s1_a = 1;
    if (has_s1_a()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->s1_a());
    }

    // optional uint32 s1_b = 2;
    if (has_s1_b()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->s1_b());
    }

    // optional int64 s1_c = 3;
    if (has_s1_c()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->s1_c());
    }

    // optional uint64 s1_d = 4;
    if (has_s1_d()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->s1_d());
    }

    // optional double s1_e = 5;
    if (has_s1_e()) {
      total_size += 1 + 8;
    }

    // optional float s1_f = 6;
    if (has_s1_f()) {
      total_size += 1 + 4;
    }

    // optional bool s1_g = 7;
    if (has_s1_g()) {
      total_size += 1 + 1;
    }

    // optional string s1_h = 8;
    if (has_s1_h()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->s1_h());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional bytes s1_i = 9;
    if (has_s1_i()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->s1_i());
    }

    // optional .ENUM_WEEK s1_l = 12;
    if (has_s1_l()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->s1_l());
    }

  }
  // repeated int32 s1_j = 10;
  {
    int data_size = 0;
    for (int i = 0; i < this->s1_j_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->s1_j(i));
    }
    total_size += 1 * this->s1_j_size() + data_size;
  }

  // repeated string s1_k = 11;
  total_size += 1 * this->s1_k_size();
  for (int i = 0; i < this->s1_k_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->s1_k(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GAME_CFG_STRUCT_1::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GAME_CFG_STRUCT_1* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GAME_CFG_STRUCT_1*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GAME_CFG_STRUCT_1::MergeFrom(const GAME_CFG_STRUCT_1& from) {
  GOOGLE_CHECK_NE(&from, this);
  s1_j_.MergeFrom(from.s1_j_);
  s1_k_.MergeFrom(from.s1_k_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_s1_a()) {
      set_s1_a(from.s1_a());
    }
    if (from.has_s1_b()) {
      set_s1_b(from.s1_b());
    }
    if (from.has_s1_c()) {
      set_s1_c(from.s1_c());
    }
    if (from.has_s1_d()) {
      set_s1_d(from.s1_d());
    }
    if (from.has_s1_e()) {
      set_s1_e(from.s1_e());
    }
    if (from.has_s1_f()) {
      set_s1_f(from.s1_f());
    }
    if (from.has_s1_g()) {
      set_s1_g(from.s1_g());
    }
    if (from.has_s1_h()) {
      set_s1_h(from.s1_h());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_s1_i()) {
      set_s1_i(from.s1_i());
    }
    if (from.has_s1_l()) {
      set_s1_l(from.s1_l());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GAME_CFG_STRUCT_1::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GAME_CFG_STRUCT_1::CopyFrom(const GAME_CFG_STRUCT_1& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GAME_CFG_STRUCT_1::IsInitialized() const {

  return true;
}

void GAME_CFG_STRUCT_1::Swap(GAME_CFG_STRUCT_1* other) {
  if (other != this) {
    std::swap(s1_a_, other->s1_a_);
    std::swap(s1_b_, other->s1_b_);
    std::swap(s1_c_, other->s1_c_);
    std::swap(s1_d_, other->s1_d_);
    std::swap(s1_e_, other->s1_e_);
    std::swap(s1_f_, other->s1_f_);
    std::swap(s1_g_, other->s1_g_);
    std::swap(s1_h_, other->s1_h_);
    std::swap(s1_i_, other->s1_i_);
    s1_j_.Swap(&other->s1_j_);
    s1_k_.Swap(&other->s1_k_);
    std::swap(s1_l_, other->s1_l_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GAME_CFG_STRUCT_1::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GAME_CFG_STRUCT_1_descriptor_;
  metadata.reflection = GAME_CFG_STRUCT_1_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
